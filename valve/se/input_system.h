#pragma once

namespace cs {

enum class button_code {
    invalid = -1,
    none = 0,

    key_first = 0,
    key_none = key_first,

    key_0,
    key_1,
    key_2,
    key_3,
    key_4,
    key_5,
    key_6,
    key_7,
    key_8,
    key_9,
    key_a,
    key_b,
    key_c,
    key_d,
    key_e,
    key_f,
    key_g,
    key_h,
    key_i,
    key_j,
    key_k,
    key_l,
    key_m,
    key_n,
    key_o,
    key_p,
    key_q,
    key_r,
    key_s,
    key_t,
    key_u,
    key_v,
    key_w,
    key_x,
    key_y,
    key_z,
    pad_0,
    pad_1,
    pad_2,
    pad_3,
    pad_4,
    pad_5,
    pad_6,
    pad_7,
    pad_8,
    pad_9,
    pad_divide,
    pad_multiply,
    pad_minus,
    pad_plus,
    pad_enter,
    pad_decimal,
    lbracket,
    rbracket,
    semicolon,
    apostrophe,
    backquote,
    comma,
    period,
    slash,
    backslash,
    minus,
    equal,
    enter,
    space,
    backspace,
    tab,
    capslock,
    numlock,
    escape,
    scrolllock,
    insert,
    key_delete,
    home,
    end,
    pageup,
    pagedown,
    key_break,
    lshift,
    rshift,
    lalt,
    ralt,
    lcontrol,
    rcontrol,
    lwin,
    rwin,
    app,
    up,
    left,
    down,
    right,
    f1,
    f2,
    f3,
    f4,
    f5,
    f6,
    f7,
    f8,
    f9,
    f10,
    f11,
    f12,
    capslocktoggle,
    numlocktoggle,
    scrolllocktoggle,

    key_last = scrolllocktoggle,
    key_count = key_last - key_first + 1,

    mouse_first = key_last + 1,

    mouse_left = mouse_first,
    mouse_right,
    mouse_middle,
    mouse_4,
    mouse_5,
    mouse_wheel_up,
    mouse_wheel_down,

    mouse_last = mouse_wheel_down,
    mouse_count = mouse_last - mouse_first + 1,
};

}

namespace se {

struct input_system {
    VIRTUAL_FUNCTION(enable_input, void, 11, (bool value = true), (this, value))
    VIRTUAL_FUNCTION(is_button_down, bool, 15, (cs::button_code btn_code), (this, btn_code))
    VIRTUAL_FUNCTION(reset_input_state, void, 39, (), (this))
    VIRTUAL_FUNCTION(button_code_to_string, const char*, 40, (cs::button_code btn_code), (this, btn_code))
    VIRTUAL_FUNCTION(virtual_key_to_button_code, cs::button_code, 45, (int virtual_key), (this, virtual_key))
    VIRTUAL_FUNCTION(button_code_to_virtual_key, int, 46, (cs::button_code btn_code), (this, btn_code))
};

}
